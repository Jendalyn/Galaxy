name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.88.0
          override: true
          components: rustfmt, clippy
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/
            ~/.cargo/git/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends protobuf-compiler || { echo "Failed to install protobuf-compiler"; exit 1; }
          protoc --version || { echo "protoc not found in PATH"; exit 1; }
          mkdir -p protos/google/api
          mkdir -p protos/google/protobuf
          curl -L -o protos/google/api/annotations.proto https://raw.githubusercontent.com/googleapis/googleapis/master/google/api/annotations.proto || { echo "Failed to download annotations.proto"; exit 1; }
          curl -L -o protos/google/api/http.proto https://raw.githubusercontent.com/googleapis/googleapis/master/google/api/http.proto || { echo "Failed to download http.proto"; exit 1; }
          curl -L -o protos/google/protobuf/descriptor.proto https://raw.githubusercontent.com/protocolbuffers/protobuf/master/src/google/protobuf/descriptor.proto || { echo "Failed to download descriptor.proto"; exit 1; }
          ls -R protos || { echo "Failed to list protos directory"; exit 1; }
          echo "PATH=$PATH"
          which protoc || { echo "protoc binary not found"; exit 1; }
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Build
        run: cargo build --release
      - name: Test
        run: cargo test --all
