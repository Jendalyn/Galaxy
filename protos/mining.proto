syntax = "proto3";
package mining;

service Mining {
    rpc GetMiningWork (GetMiningWorkRequest) returns (GetMiningWorkResponse);
    rpc SubmitMinedBlock (SubmitMinedBlockRequest) returns (SubmitMinedBlockResponse);
    rpc BatchGetMiningWork (BatchGetMiningWorkRequest) returns (BatchGetMiningWorkResponse);
    rpc StreamMiningWork (stream StreamMiningWorkRequest) returns (stream StreamMiningWorkResponse);
    rpc GetMetrics (GetMetricsRequest) returns (GetMetricsResponse);
}

message GetMiningWorkRequest {
    string miner_id = 1; // Unique identifier for the miner
}
message GetMiningWorkResponse {
    string block_template = 1; // Hex-encoded block template
    uint32 target_difficulty = 2; // Mining difficulty target
    string error = 3; // Error message if work generation fails
}
message SubmitMinedBlockRequest {
    string block_hex = 1; // Hex-encoded mined block
}
message SubmitMinedBlockResponse {
    bool success = 1;
    string error = 2; // Error message if submission fails
}
message BatchGetMiningWorkRequest {
    repeated string miner_ids = 1; // List of miner IDs
}
message BatchGetMiningWorkResponse {
    repeated GetMiningWorkResponse results = 1; // Results for each miner
}
message StreamMiningWorkRequest {
    string miner_id = 1; // Miner ID to monitor
}
message StreamMiningWorkResponse {
    string block_template = 1; // Hex-encoded block template
    uint32 target_difficulty = 2; // Mining difficulty target
    string error = 3; // Error message if work generation fails
}
message GetMetricsRequest {}
message GetMetricsResponse {
    uint64 work_requests = 1; // Total mining work requests
    double avg_latency_ms = 2; // Average work generation latency
    uint64 blocks_submitted = 3; // Total blocks submitted
}
